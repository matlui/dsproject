// This file was auto-generated by ML.NET Model Builder.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Dsproject_Server
{
    public partial class MLModel
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Sex", @"Sex"),new InputOutputColumnPair(@"Age", @"Age"),new InputOutputColumnPair(@"SibSp", @"SibSp"),new InputOutputColumnPair(@"Parch", @"Parch"),new InputOutputColumnPair(@"Fare", @"Fare"),new InputOutputColumnPair(@"Pclass_1", @"Pclass_1"),new InputOutputColumnPair(@"Pclass_2", @"Pclass_2"),new InputOutputColumnPair(@"Pclass_3", @"Pclass_3"),new InputOutputColumnPair(@"Embarked_C", @"Embarked_C"),new InputOutputColumnPair(@"Embarked_Q", @"Embarked_Q"),new InputOutputColumnPair(@"Embarked_S", @"Embarked_S")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Sex",@"Age",@"SibSp",@"Parch",@"Fare",@"Pclass_1",@"Pclass_2",@"Pclass_3",@"Embarked_C",@"Embarked_Q",@"Embarked_S"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"Survived",inputColumnName:@"Survived"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=3121,MinimumExampleCountPerLeaf=124,NumberOfTrees=50,MaximumBinCountPerFeature=129,FeatureFraction=0.99999999,LearningRate=0.999999776672986,LabelColumnName=@"Survived",FeatureColumnName=@"Features"}),labelColumnName: @"Survived"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
